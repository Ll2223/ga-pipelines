name: Second Implementation

on:
  workflow_call:
    inputs:
      repo-name:
        required: false
        type: string

jobs:

  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    environment:
      name: dev
    
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/checkout@v4
      name: Checkout scripts
      with:
         repository: Ll2223/ga-pipelines
         token: ${{ secrets.GH_TOKEN }}
         path: templates
         sparse-checkout: scripts/PipelineRundeck
    
    - name: Get changed YAML files
      id: yaml-files
      run: |
        pip install requests
        export GH_TOKEN=${{ secrets.GH_TOKEN }}
        files=$(python templates/scripts/PipelineRundeck/identify-yaml.py)
        echo "::set-output name=files::${files}"

    - name: Staging Environment Variables
      id: staging-env-vars
      uses: raven-actions/environment-variables@v1.0.0
      with:
        github-token: ${{ secrets.TESTE_TOKEN }}
        environment: dev

    - name: Replace with envsubst
      run: |
        IFS=',' read -ra yaml_files <<< "${{ steps.yaml-files.outputs.files }}"
        for file in "${yaml_files[@]}"; do
          envsubst < $file | tee $file
        done

  deploy-hml:
    name: Deploy to hml
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: hml
    
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/checkout@v4
      name: Checkout scripts
      with:
         repository: Ll2223/ga-pipelines
         token: ${{ secrets.GH_TOKEN }}
         path: templates
         sparse-checkout: scripts/PipelineRundeck
    
    - name: Get changed YAML files
      id: yaml-files
      run: |
        pip install requests
        export GH_TOKEN=${{ secrets.GH_TOKEN }}
        files=$(python templates/scripts/PipelineRundeck/identify-yaml.py)
        echo "::set-output name=files::${files}"

    - name: Staging Environment Variables
      id: staging-env-vars
      uses: raven-actions/environment-variables@v1.0.0
      with:
        github-token: ${{ secrets.TESTE_TOKEN }}
        environment: hml

    - name: Replace with envsubst
      run: |
        IFS=',' read -ra yaml_files <<< "${{ steps.yaml-files.outputs.files }}"
        for file in "${yaml_files[@]}"; do
          envsubst < $file | tee $file
        done

  deploy-prd:
    name: Deploy to prd
    needs: [deploy-dev, deploy-hml]
    runs-on: ubuntu-latest
    environment:
      name: prd
    
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/checkout@v4
      name: Checkout scripts
      with:
         repository: Ll2223/ga-pipelines
         token: ${{ secrets.GH_TOKEN }}
         path: templates
         sparse-checkout: scripts/PipelineRundeck
    
    - name: Get changed YAML files
      id: yaml-files
      run: |
        pip install requests
        export GH_TOKEN=${{ secrets.GH_TOKEN }}
        files=$(python templates/scripts/PipelineRundeck/identify-yaml.py)
        echo "::set-output name=files::${files}"

    - name: Staging Environment Variables
      id: staging-env-vars
      uses: raven-actions/environment-variables@v1.0.0
      with:
        github-token: ${{ secrets.TESTE_TOKEN }}
        environment: prd

    - name: Replace with envsubst
      run: |
        IFS=',' read -ra yaml_files <<< "${{ steps.yaml-files.outputs.files }}"
        for file in "${yaml_files[@]}"; do
          envsubst < $file | tee $file
        done
